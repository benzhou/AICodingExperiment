{"ast":null,"code":"var _jsxFileName = \"/Users/benzhou/workspace/AICoding/frontend/src/components/Register.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { authService } from '../services/authService';\nimport { useUser } from '../context/UserContext';\nimport { Toast } from './common/Toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Register() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({});\n  const [toast, setToast] = useState(null);\n  const {\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n  const {\n    setUser\n  } = useUser();\n  const validateForm = () => {\n    const newErrors = {};\n    if (!name) newErrors.name = t('auth.errors.required');\n    if (!email) newErrors.email = t('auth.errors.required');else if (!/\\S+@\\S+\\.\\S+/.test(email)) newErrors.email = t('auth.errors.invalidEmail');\n    if (!password) newErrors.password = t('auth.errors.required');else if (password.length < 6) newErrors.password = t('auth.errors.passwordLength');\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    try {\n      const response = await authService.register({\n        name,\n        email,\n        password\n      });\n      setUser(response.user);\n      setToast({\n        message: t('auth.success.registration'),\n        type: 'success'\n      });\n\n      // Redirect after a short delay to show the success message\n      setTimeout(() => {\n        navigate('/dashboard');\n      }, 1500);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setToast({\n        message: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || t('auth.errors.registrationFailed'),\n        type: 'error'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md w-full space-y-8 p-8 bg-white rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center text-3xl font-extrabold text-gray-900\",\n          children: t('auth.labels.register')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"mt-8 space-y-6\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"sr-only\",\n            children: t('auth.labels.name')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            required: true,\n            className: `appearance-none rounded-md relative block w-full px-3 py-2 border ${errors.name ? 'border-red-500' : 'border-gray-300'} placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm`,\n            placeholder: t('auth.labels.name'),\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-red-500\",\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"sr-only\",\n            children: t('auth.labels.email')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            required: true,\n            className: `appearance-none rounded-md relative block w-full px-3 py-2 border ${errors.email ? 'border-red-500' : 'border-gray-300'} placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm`,\n            placeholder: t('auth.labels.email'),\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-red-500\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"sr-only\",\n            children: t('auth.labels.password')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            required: true,\n            className: `appearance-none rounded-md relative block w-full px-3 py-2 border ${errors.password ? 'border-red-500' : 'border-gray-300'} placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm`,\n            placeholder: t('auth.labels.password'),\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-red-500\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",\n            children: t('auth.labels.register')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-center\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"text-indigo-600 hover:text-indigo-500\",\n            children: t('auth.labels.haveAccount')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), toast && /*#__PURE__*/_jsxDEV(Toast, {\n      message: toast.message,\n      type: toast.type,\n      onClose: () => setToast(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"n6dmKsFCy6xYidLHJ6qGypsidU8=\", false, function () {\n  return [useTranslation, useNavigate, useUser];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","Link","useTranslation","authService","useUser","Toast","jsxDEV","_jsxDEV","Register","_s","name","setName","email","setEmail","password","setPassword","errors","setErrors","toast","setToast","t","navigate","setUser","validateForm","newErrors","test","length","Object","keys","handleSubmit","e","preventDefault","response","register","user","message","type","setTimeout","err","_err$response","_err$response$data","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","required","placeholder","value","onChange","target","to","onClose","_c","$RefreshReg$"],"sources":["/Users/benzhou/workspace/AICoding/frontend/src/components/Register.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { authService } from '../services/authService';\nimport { useUser } from '../context/UserContext';\nimport { Toast } from './common/Toast';\n\ninterface FormErrors {\n  name?: string;\n  email?: string;\n  password?: string;\n}\n\nexport function Register() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState<FormErrors>({});\n  const [toast, setToast] = useState<{ message: string; type: 'success' | 'error' } | null>(null);\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { setUser } = useUser();\n\n  const validateForm = (): boolean => {\n    const newErrors: FormErrors = {};\n    \n    if (!name) newErrors.name = t('auth.errors.required');\n    if (!email) newErrors.email = t('auth.errors.required');\n    else if (!/\\S+@\\S+\\.\\S+/.test(email)) newErrors.email = t('auth.errors.invalidEmail');\n    if (!password) newErrors.password = t('auth.errors.required');\n    else if (password.length < 6) newErrors.password = t('auth.errors.passwordLength');\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    try {\n      const response = await authService.register({ name, email, password });\n      setUser(response.user);\n      setToast({\n        message: t('auth.success.registration'),\n        type: 'success'\n      });\n      \n      // Redirect after a short delay to show the success message\n      setTimeout(() => {\n        navigate('/dashboard');\n      }, 1500);\n    } catch (err: any) {\n      setToast({\n        message: err.response?.data?.message || t('auth.errors.registrationFailed'),\n        type: 'error'\n      });\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n      <div className=\"max-w-md w-full space-y-8 p-8 bg-white rounded-lg shadow\">\n        <div>\n          <h2 className=\"text-center text-3xl font-extrabold text-gray-900\">\n            {t('auth.labels.register')}\n          </h2>\n        </div>\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"name\" className=\"sr-only\">\n              {t('auth.labels.name')}\n            </label>\n            <input\n              id=\"name\"\n              type=\"text\"\n              required\n              className={`appearance-none rounded-md relative block w-full px-3 py-2 border ${\n                errors.name ? 'border-red-500' : 'border-gray-300'\n              } placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm`}\n              placeholder={t('auth.labels.name')}\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n            {errors.name && (\n              <p className=\"mt-1 text-sm text-red-500\">{errors.name}</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"email\" className=\"sr-only\">\n              {t('auth.labels.email')}\n            </label>\n            <input\n              id=\"email\"\n              type=\"email\"\n              required\n              className={`appearance-none rounded-md relative block w-full px-3 py-2 border ${\n                errors.email ? 'border-red-500' : 'border-gray-300'\n              } placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm`}\n              placeholder={t('auth.labels.email')}\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            {errors.email && (\n              <p className=\"mt-1 text-sm text-red-500\">{errors.email}</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"password\" className=\"sr-only\">\n              {t('auth.labels.password')}\n            </label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              required\n              className={`appearance-none rounded-md relative block w-full px-3 py-2 border ${\n                errors.password ? 'border-red-500' : 'border-gray-300'\n              } placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm`}\n              placeholder={t('auth.labels.password')}\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            {errors.password && (\n              <p className=\"mt-1 text-sm text-red-500\">{errors.password}</p>\n            )}\n          </div>\n          <div>\n            <button\n              type=\"submit\"\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              {t('auth.labels.register')}\n            </button>\n          </div>\n          <div className=\"text-sm text-center\">\n            <Link to=\"/login\" className=\"text-indigo-600 hover:text-indigo-500\">\n              {t('auth.labels.haveAccount')}\n            </Link>\n          </div>\n        </form>\n      </div>\n      {toast && (\n        <Toast\n          message={toast.message}\n          type={toast.type}\n          onClose={() => setToast(null)}\n        />\n      )}\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}