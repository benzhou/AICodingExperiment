{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api/v1';\nexport const authService = {\n  async login(data) {\n    const response = await axios.post(`${API_URL}/auth/login`, data);\n    this.setToken(response.data.token);\n    return response.data;\n  },\n  async register(data) {\n    const response = await axios.post(`${API_URL}/auth/register`, data);\n    this.setToken(response.data.token);\n    return response.data;\n  },\n  async loginWithGoogle() {\n    window.location.href = `${API_URL}/auth/google`;\n  },\n  setToken(token) {\n    localStorage.setItem('token', token);\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  },\n  getToken() {\n    return localStorage.getItem('token');\n  },\n  logout() {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n  },\n  isAuthenticated() {\n    return !!this.getToken();\n  }\n};","map":{"version":3,"names":["axios","API_URL","authService","login","data","response","post","setToken","token","register","loginWithGoogle","window","location","href","localStorage","setItem","defaults","headers","common","getToken","getItem","logout","removeItem","isAuthenticated"],"sources":["/Users/benzhou/workspace/AICoding/frontend/src/services/authService.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api/v1';\n\nexport interface LoginRequest {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterRequest {\n  email: string;\n  password: string;\n  name: string;\n}\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  authProvider: string;\n}\n\nexport interface AuthResponse {\n  token: string;\n  user: User;\n}\n\nexport const authService = {\n  async login(data: LoginRequest): Promise<AuthResponse> {\n    const response = await axios.post(`${API_URL}/auth/login`, data);\n    this.setToken(response.data.token);\n    return response.data;\n  },\n\n  async register(data: RegisterRequest): Promise<AuthResponse> {\n    const response = await axios.post(`${API_URL}/auth/register`, data);\n    this.setToken(response.data.token);\n    return response.data;\n  },\n\n  async loginWithGoogle() {\n    window.location.href = `${API_URL}/auth/google`;\n  },\n\n  setToken(token: string) {\n    localStorage.setItem('token', token);\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  },\n\n  getToken(): string | null {\n    return localStorage.getItem('token');\n  },\n\n  logout() {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n  },\n\n  isAuthenticated(): boolean {\n    return !!this.getToken();\n  }\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,8BAA8B;AAyB9C,OAAO,MAAMC,WAAW,GAAG;EACzB,MAAMC,KAAKA,CAACC,IAAkB,EAAyB;IACrD,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,aAAa,EAAEG,IAAI,CAAC;IAChE,IAAI,CAACG,QAAQ,CAACF,QAAQ,CAACD,IAAI,CAACI,KAAK,CAAC;IAClC,OAAOH,QAAQ,CAACD,IAAI;EACtB,CAAC;EAED,MAAMK,QAAQA,CAACL,IAAqB,EAAyB;IAC3D,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,gBAAgB,EAAEG,IAAI,CAAC;IACnE,IAAI,CAACG,QAAQ,CAACF,QAAQ,CAACD,IAAI,CAACI,KAAK,CAAC;IAClC,OAAOH,QAAQ,CAACD,IAAI;EACtB,CAAC;EAED,MAAMM,eAAeA,CAAA,EAAG;IACtBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAGZ,OAAO,cAAc;EACjD,CAAC;EAEDM,QAAQA,CAACC,KAAa,EAAE;IACtBM,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEP,KAAK,CAAC;IACpCR,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUV,KAAK,EAAE;EACpE,CAAC;EAEDW,QAAQA,CAAA,EAAkB;IACxB,OAAOL,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;EACtC,CAAC;EAEDC,MAAMA,CAAA,EAAG;IACPP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChC,OAAOtB,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;EACvD,CAAC;EAEDK,eAAeA,CAAA,EAAY;IACzB,OAAO,CAAC,CAAC,IAAI,CAACJ,QAAQ,CAAC,CAAC;EAC1B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}