{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api/v1';\nexport const authService = {\n  tokenCheckInterval: null,\n  async login(data) {\n    const response = await axios.post(`${API_URL}/auth/login`, data);\n    this.setToken(response.data.token, response.data.expires_in);\n    return response.data;\n  },\n  async register(data) {\n    const response = await axios.post(`${API_URL}/auth/register`, data);\n    this.setToken(response.data.token, response.data.expires_in);\n    return response.data;\n  },\n  async loginWithGoogle() {\n    window.location.href = `${API_URL}/auth/google`;\n  },\n  setToken(token, expiresIn) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('tokenExpiry', (Date.now() + expiresIn * 1000).toString());\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n    // Set up token expiry check\n    if (this.tokenCheckInterval) {\n      clearInterval(this.tokenCheckInterval);\n    }\n    this.tokenCheckInterval = setInterval(() => this.checkTokenExpiry(), 60000); // Check every minute\n  },\n  getToken() {\n    return localStorage.getItem('token');\n  },\n  async checkTokenExpiry() {\n    const expiry = localStorage.getItem('tokenExpiry');\n    if (expiry && Date.now() > parseInt(expiry)) {\n      this.logout();\n      window.location.href = '/login';\n    }\n  },\n  async getTokenInfo() {\n    const response = await axios.get(`${API_URL}/auth/token-info`);\n    return response.data;\n  },\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('tokenExpiry');\n    delete axios.defaults.headers.common['Authorization'];\n    if (this.tokenCheckInterval) {\n      clearInterval(this.tokenCheckInterval);\n    }\n  },\n  isAuthenticated() {\n    const token = this.getToken();\n    const expiry = localStorage.getItem('tokenExpiry');\n    if (!token || !expiry) {\n      return false;\n    }\n    return Date.now() < parseInt(expiry);\n  }\n};","map":{"version":3,"names":["axios","API_URL","authService","tokenCheckInterval","login","data","response","post","setToken","token","expires_in","register","loginWithGoogle","window","location","href","expiresIn","localStorage","setItem","Date","now","toString","defaults","headers","common","clearInterval","setInterval","checkTokenExpiry","getToken","getItem","expiry","parseInt","logout","getTokenInfo","get","removeItem","isAuthenticated"],"sources":["/Users/benzhou/workspace/AICoding/frontend/src/services/authService.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api/v1';\n\nexport interface LoginRequest {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterRequest {\n  email: string;\n  password: string;\n  name: string;\n}\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  authProvider: string;\n}\n\nexport interface AuthResponse {\n  token: string;\n  user: User;\n  expires_in: number;\n}\n\ninterface TokenInfo {\n  token: string;\n  expires_in: number;\n}\n\nexport const authService = {\n  tokenCheckInterval: null as NodeJS.Timeout | null,\n\n  async login(data: LoginRequest): Promise<AuthResponse> {\n    const response = await axios.post(`${API_URL}/auth/login`, data);\n    this.setToken(response.data.token, response.data.expires_in);\n    return response.data;\n  },\n\n  async register(data: RegisterRequest): Promise<AuthResponse> {\n    const response = await axios.post(`${API_URL}/auth/register`, data);\n    this.setToken(response.data.token, response.data.expires_in);\n    return response.data;\n  },\n\n  async loginWithGoogle() {\n    window.location.href = `${API_URL}/auth/google`;\n  },\n\n  setToken(token: string, expiresIn: number) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('tokenExpiry', (Date.now() + expiresIn * 1000).toString());\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    \n    // Set up token expiry check\n    if (this.tokenCheckInterval) {\n      clearInterval(this.tokenCheckInterval);\n    }\n    this.tokenCheckInterval = setInterval(() => this.checkTokenExpiry(), 60000); // Check every minute\n  },\n\n  getToken(): string | null {\n    return localStorage.getItem('token');\n  },\n\n  async checkTokenExpiry() {\n    const expiry = localStorage.getItem('tokenExpiry');\n    if (expiry && Date.now() > parseInt(expiry)) {\n      this.logout();\n      window.location.href = '/login';\n    }\n  },\n\n  async getTokenInfo(): Promise<TokenInfo> {\n    const response = await axios.get(`${API_URL}/auth/token-info`);\n    return response.data;\n  },\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('tokenExpiry');\n    delete axios.defaults.headers.common['Authorization'];\n    if (this.tokenCheckInterval) {\n      clearInterval(this.tokenCheckInterval);\n    }\n  },\n\n  isAuthenticated(): boolean {\n    const token = this.getToken();\n    const expiry = localStorage.getItem('tokenExpiry');\n    if (!token || !expiry) {\n      return false;\n    }\n    return Date.now() < parseInt(expiry);\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}