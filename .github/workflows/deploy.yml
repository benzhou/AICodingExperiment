name: Deploy to AWS ECS

on:
  push:
    branches:
      - master  # Change this to your default branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production-us

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Amazon ECR
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}  # Ensure this is set
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get AWS Account ID
        id: get_account_id
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}  # Ensure this is set
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "AWS_ACCOUNT_ID=${ACCOUNT_ID}" >> $GITHUB_ENV

      - name: Build and push Docker image
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT_ID: ${{ env.AWS_ACCOUNT_ID }}  # Use the retrieved account ID
          GITHUB_SHA: ${{ github.sha }}  # Get the commit SHA for versioning
        run: |
          docker build -t my-app .
          docker tag my-app:latest $AWS_ACCOUNT_ID.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/aicodedemo:${GITHUB_SHA}
          docker push $AWS_ACCOUNT_ID.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/aicodedemo:${GITHUB_SHA}

      - name: Update ECS Service
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          # Update the ECS service to use the new image
          aws ecs update-service --cluster aicodemo-cluster --service aicodemo --force-new-deployment --desired-count 1